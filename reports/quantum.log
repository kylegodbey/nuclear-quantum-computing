Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Now we can construct our RBM for an alpha of our choosing. 
alpha_k = alph
solGaler=phibuilder(coeffs)
lamGaler=energy

alpha_vals = [alpha_k]  

T = np.zeros((len(alpha_vals),m)) 
 
T_evals = np.zeros(len(alpha_vals))

for i,alpha_sample in enumerate(alpha_vals):
    H = construct_H(V,x_array,mass,alpha_sample) # construct the Hamiltonian matrix for given alpha_sample.
    evals, evects = solve(H,x_array,h) # solve the system for evals and evects.
    T[i] = evects[i]/np.linalg.norm(evects[i]) # assign the nth evect to solution array T
    T_evals[i] = evals[i] # assign the nth eigenvalue to the eigenvalue array T_eval.
    print(f'Finite Ele alpha = {alpha_sample}, lambda = {evals[i]}')
    
print(f'QC Galerkin alpha = {alph}, lambda = {lamGaler}')

    

# Make plots of the numerical wavefunction 
fig, ax = plt.subplots(1,1,figsize=(5,3))
for i in range(len(alpha_vals)):
    
    ax.plot(x_array,(T[i]),label= r'Finite element $\alpha$ = '+str(alpha_vals[i]))

ax.plot(x_array,(phi1),label=r'Galerkin $\alpha$ = '+str(alpha_vals[i]))    
    

ax.set_title('Numerical solutions')

ax.legend()

plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m/tmp/ipykernel_1814/1959063373.py[0m in [0;36m<module>[0;34m[0m
[1;32m     27[0m     [0max[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mx_array[0m[0;34m,[0m[0;34m([0m[0mT[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m)[0m[0;34m,[0m[0mlabel[0m[0;34m=[0m [0;34mr'Finite element $\alpha$ = '[0m[0;34m+[0m[0mstr[0m[0;34m([0m[0malpha_vals[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     28[0m [0;34m[0m[0m
[0;32m---> 29[0;31m [0max[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mx_array[0m[0;34m,[0m[0;34m([0m[0mphi1[0m[0;34m)[0m[0;34m,[0m[0mlabel[0m[0;34m=[0m[0;34mr'Galerkin $\alpha$ = '[0m[0;34m+[0m[0mstr[0m[0;34m([0m[0malpha_vals[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     30[0m [0;34m[0m[0m
[1;32m     31[0m [0;34m[0m[0m

[0;31mNameError[0m: name 'phi1' is not defined
NameError: name 'phi1' is not defined

